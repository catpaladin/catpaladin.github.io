<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Charmbracelet on It's Go time!</title><link>https://blog.mikesahari.com/tags/charmbracelet/</link><description>Recent content in Charmbracelet on It's Go time!</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><image><url>https://blog.mikesahari.com/images/gopher_favicon.svg</url><title>It's Go time!</title><link>https://blog.mikesahari.com/</link></image><lastBuildDate>Sat, 08 Feb 2025 08:15:00 -0800</lastBuildDate><atom:link href="https://blog.mikesahari.com/tags/charmbracelet/index.xml" rel="self" type="application/rss+xml"/><item><title>Building Beautiful CLIs with Huh</title><link>https://blog.mikesahari.com/posts/clis-and-huh/</link><pubDate>Sat, 08 Feb 2025 08:15:00 -0800</pubDate><guid isPermaLink="true">https://blog.mikesahari.com/posts/clis-and-huh/</guid><media:content url="https://blog.mikesahari.com/images/gophers/go-fish.svg" medium="image" type="image/jpeg" isDefault="true"/><description><![CDATA[
        <p><em>Hey there, fellow Go enthusiasts! Today, I&rsquo;m going to share something that completely changed my CLI development game. Buckle up â€“ we&rsquo;re diving deep into making CLIs that users will actually enjoy using!</em></p>
<h2 id="the-cli-development-evolution">The CLI Development Evolution</h2>
<p>You know how we all instinctively reach for <a href="https://github.com/spf13/cobra">cobra</a> when building command-line tools in Go? Well, here is the perfect companion that&rsquo;s transformed how I think about CLI interactions: <a href="https://github.com/charmbracelet/huh">huh</a> by Charmbracelet.</p>
<p><img src="/images/gifs/huh-cat.gif" alt="huh" title="huh"></p>
<p><em>Here&rsquo;s the thing that got me excited:</em> While <code>cobra</code> handles all the heavy lifting of command structure and flags (and does it beautifully, I might add), <code>huh</code> brings something entirely different to the table. It&rsquo;s all about creating those smooth, interactive forms and prompts that make your CLIs feel professional and polished. Think of it as the difference between a bare-bones terminal app and something that feels like it belongs in 2025.</p>
      ]]></description></item></channel></rss>