<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Programming on It's Go time!</title><link>https://blog.mikesahari.com/tags/programming/</link><description>Recent content in Programming on It's Go time!</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><image><url>https://blog.mikesahari.com/images/gopher_favicon.svg</url><title>It's Go time!</title><link>https://blog.mikesahari.com/</link></image><lastBuildDate>Fri, 28 Mar 2025 21:45:06 -0700</lastBuildDate><atom:link href="https://blog.mikesahari.com/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Structs Fundamentals: From Basics to Advanced Usage</title><link>https://blog.mikesahari.com/posts/go-structs/</link><pubDate>Fri, 28 Mar 2025 21:45:06 -0700</pubDate><guid isPermaLink="true">https://blog.mikesahari.com/posts/go-structs/</guid><media:content url="https://blog.mikesahari.com/images/gophers/go-learn.svg" medium="image" type="image/jpeg" isDefault="true"/><description><![CDATA[
        <p>If you&rsquo;ve been diving into Go programming (or &ldquo;Golang&rdquo; as the cool kids say), you&rsquo;ve definitely encountered structs. They&rsquo;re absolutely fundamental to how we organize and work with data in Go, and mastering them is crucial to writing clean, efficient Go code.</p>
<p>I like to teach about structs, like other fundamentals, because of how powerful structs can be when used properly. Let&rsquo;s break down everything you need to know about structs, from the very basics to some advanced patterns I&rsquo;ve learned the hard way.</p>
      ]]></description></item></channel></rss>